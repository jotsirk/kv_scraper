version: '3.8'

services:
  app:
    build:
      context: ../dockerfile
      dockerfile: Dockerfile-scraper
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/scraper_db
      - SPRING_DATASOURCE_USERNAME=scraper_user
      - SPRING_DATASOURCE_PASSWORD=scraper_password
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_JPA_SHOW_SQL=true
      - SPRING_JPA_DATABASE_PLATFORM=org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - scraper-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=scraper_db
      - POSTGRES_USER=scraper_user
      - POSTGRES_PASSWORD=scraper_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U scraper_user -d scraper_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - scraper-network

  adminer:
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - scraper-network

volumes:
  postgres_data:

networks:
  scraper-network:
    driver: bridge